%var: N      1000     // total population
%var: beta   0.034    // probability of infection from contact
%var: c      13       // contact rate, lower than normal
%var: k_pro  1.0/3    // progression from exposed to prodromic
%var: k_inf  1.0/2    // progression from prodromic to full disease
%var: p_asym 0.4      // probability of being asymptomatic
%var: k_rem  1.0/7    // removal by recovery or death
%var: k_exit 1.0/14   // rate of leaving isolation
%var: k_retest 1.0/14 // rate of allowing retesting
%var: k_flu  1.0/365  // rate of getting the flu, once per year
%var: d_flu  7        // duration of flu
%var: p_flu  d_flu*k_flu // prevalence of flu
%var: thetaT 1.0/3    // rate of kit testing in population
%var: thetaD 1.0/3    // rate of clinical diagnosis
%var: thetaI 1.0/7    // rate of testing of isolated population
%var: theta  thetaD + thetaI + thetaT - thetaD*thetaI - thetaD*thetaT - thetaI*thetaT + thetaD*thetaI*thetaT
%var: m      0.1*N    // rate of manufacturing tests
%var: r      1.0      // recall - true positives per positive
%var: s      1.0      // specificity - true negatives per negative
%var: eta    0.45     // trace 90% of contacts in two days

// individuals have several internal states:
//   - x corresponds to the standard SEIR compartments
//   - s symptomaticity: prodromic, asymptomatic, symptomatic
//   - t indicates whether testing should give positive or negative
//   - r test result, x for untested
//   - q isolation status
//   - f ill with the flu or not
%agent: P(x{s e i r} s{p a s} t{y n} r{x y n} q{y n} f{y n})
// tests are discrete entities and may be scarce
%agent: T()
// traces follow the same disease progression as individuals
%agent: C(x{s e i r})

// manufacturing of tests
'manufacturing' . -> T()  @ m

// infection self-isolation due to endemic flu
'flu_infection' P(f{n/y}, q{#/y}) @ k_flu
'flu_recovery'  P(f{y/n})         @ 1/d_flu

// progression of individuals to infectiousness
'prog_pro'      P(x{e/i}, s{p} t{n/y})  @ k_pro
// progression to asymptomatic
'prog_asym'     P(x{i}, s{p/a})         @ k_inf*p_asym
// becoming symptomatic means self-isolation
'prog_sym'      P(x{i}, s{p/s}, q{#/y}) @ k_inf*(1-p_asym)

// recovery of asymptomatic individuals
'rem_asym'      P(x{i/r}, s{a}, t{y/n})         @ k_rem
// recovery from symptomatic also removal from isolation
'rem_sym'       P(x{i/r}, s{s}, t{y/n}, q{y/n}) @ k_rem

// progression of traces parallel to individuals wthout
// distinguishing severity
'c_progression' C(x{e/i}) @ k_pro
'c_removal'     C(x{i/r}) @ 1.0/(1.0/k_inf + 1.0/k_rem)
'c_degradation' C() -> .  @ k_rem

// contact rules
'lucky'     P(x{s}, q{n}), P(x{i}, q{n}), . -> 
            P(x{s}, q{n}), P(x{i}, q{n}), C(x{s})   @ (1-beta)*c/N
'infection' P(x{s}, q{n}), P(x{i}, q{n}), . -> 
            P(x{e}, q{n}), P(x{i}, q{n}), C(x{e})   @ beta*c/N
'exposed'   P(x{e}, q{n}), P(x{i}, q{n}), . -> 
            P(x{e}, q{n}), P(x{i}, q{n}), C(x{e})   @ c/N
'infected'  P(x{i}, q{n}), P(x{i}, q{n}), . -> 
            P(x{i}, q{n}), P(x{i}, q{n}), C(x{i})   @ c/N
'immune'    P(x{r}, q{n}), P(x{i}, q{n}), . -> 
            P(x{r}, q{n}), P(x{i}, q{n}), C(x{r})   @ c/N

// testing rules 1 - clinically diagnose those symptomatic
'test_cd'   P(s{s}, r{x/y}) @ thetaD
'test_flu'  P(f{y}, r{x/y}) @ thetaD

// testing rules 2 - test those in the population who are symptomatic
'test_p_tp' P(s{s}, r{x}), T() -> P(s{s}, r{y}), . @ r*thetaT
'test_p_fn' P(s{s}, r{x}), T() -> P(s{s}, r{n}), . @ (1-r)*thetaT

// testing rules 3 - test those who have been isolated and are
// untested
'test_tn'   P(t{n}, r{x}, q{y}), T() -> P(t{n}, r{n}, q{n}), . @ s*thetaI
'test_fp'   P(t{n}, r{x}, q{y}), T() -> P(t{n}, r{y}, q{y}), . @ (1-s)*thetaI
'test_tp'   P(t{y}, r{x}, q{y}), T() -> P(t{y}, r{y}, q{y}), . @ r*thetaI
'test_fn'   P(t{y}, r{x}, q{y}), T() -> P(t{y}, r{n}, q{n}), . @ (1-r)*thetaI

// testing rules 4 - allow for retesting after a time
'retest'    P(r{#/x}) @ k_retest

// tracing rules - trace those who have had contact with positive
// tested individuals
'trace_s'   P(x{s}, q{#}), P(r{y}), C(x{s}) ->
            P(x{s}, q{y}), P(r{y}), .        @ eta*theta/N
'trace_e'   P(x{e}, q{#}), P(r{y}), C(x{e}) ->
            P(x{e}, q{y}), P(r{y}), .        @ eta*theta/N
'trace_i'   P(x{i}, q{#}), P(r{y}), C(x{i}) ->
            P(x{i}, q{y}), P(r{y}), .        @ eta*theta/N
'trace_r'   P(x{r}, q{#}), P(r{y}), C(x{r}) ->
            P(x{r}, q{y}), P(r{y}), .        @ eta*theta/N

// exit from isolation
'exit_s'    P(x{s}, q{y/n})             @ k_exit
'exit_e'    P(x{e}, q{y/n})             @ k_exit
'exit_ip'   P(x{i}, s{p}, r{n}, q{y/n}) @ k_exit // prodromic
'exit_ia'   P(x{i}, s{a}, r{n}, q{y/n}) @ k_exit // asymptomatic
'exit_ipx'  P(x{i}, s{p}, r{x}, q{y/n}) @ k_exit // prodromic
'exit_iax'  P(x{i}, s{a}, r{x}, q{y/n}) @ k_exit // asymptomatic
'exit_r'    P(x{r}, q{y/n})             @ k_exit

%obs: Safe   |P(x{i}, q{y})|
%obs: Active |P(x{s}, q{n})| + |P(x{r}, q{n})|
%obs: Bored  |P(x{s}, q{y})| + |P(x{r}, q{y})|
%obs: Danger |P(x{i}, q{n})|

%obs: Sn    |P(x{s}, q{n})|
%obs: En    |P(x{e}, q{n})|
%obs: In    |P(x{i}, q{n})|
%obs: Rn    |P(x{r}, q{n})|
%obs: Sy    |P(x{s}, q{y})|
%obs: Ey    |P(x{e}, q{y})|
%obs: Iy    |P(x{i}, q{y})|
%obs: Ry    |P(x{r}, q{y})|
%obs: Cs    |C(x{s})|
%obs: Ce    |C(x{e})|
%obs: Ci    |C(x{i})|
%obs: Cr    |C(x{r})|
%obs: T     |T()|

// initially infectious
%var: INIT_I 0.005*N
// initially susceptible
%var: INIT_S N - INIT_I

%init: INIT_I P(x{i}, s{p}, t{n}, r{x}, q{n}, f{n})
%init: INIT_S P(x{s}, s{p}, t{n}, r{x}, q{n}, f{n})
